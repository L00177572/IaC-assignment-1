
Description: IaC-assign-1

Parameters:
  AZone: 
    Type: String  
    Description: AvailabilityZone One
    Default: eu-west-1a
  AZtwo: 
    Type: String  
    Description: AvailabilityZone Two
    Default: eu-west-1b
  KeyName:
    Description: Amazon EC2 KeyPair
    Type: AWS::EC2::KeyPair::KeyName
    Default: ec2ltu
  EC2InstanceType:
    Description: WebServer EC2 instance type  
    Type: String
    Default: t2.micro
    AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
    ConstraintDescription: Only free tiers instance types are allowed.
  MyIpSSHLocation:
    Description: My own Ip to connect on EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 79.145.49.216/32 #my public IP address
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x. 
Mappings:
  AWSRegionArch2AMI:
    eu-west-1:
      AMZNLINUX2: ami-07d9160fa81ccffb5
      UBUNTU: ami-0f29c8402f8cce65c

Resources:
# general
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/16
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'
  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  RouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'
        - Key: Name
          Value: IaCRouteTable
  Route:
    Type: 'AWS::EC2::Route'
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway  

#region - AvailabilityZone 1

#region - jumpBox - J         
  PublicSubnetJumpBox:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'
  SubnetRouteTableAssociationJumpBox:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnetJumpBox
      RouteTableId: !Ref RouteTable     
  EC2JumpBoxSG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: EC2JumpBoxSG
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref MyIpSSHLocation
  EC2JumpBox:
    Type: 'AWS::EC2::Instance'
    Properties:
      AvailabilityZone: !Ref AZone
      SecurityGroups:
        - !Ref EC2JumpBoxSG
      Tags:
        - Key: Name
          Value: jumpBox
      InstanceType: t2.micro
      ImageId:
        Fn::FindInMap:
          - AWSRegionArch2AMI
          - !Ref AWS::Region
          - AMZNLINUX2
      KeyName: !Ref KeyName
#endregion - jumpBox - J      

#region - Other Server - F
  PrivateSubnetOtherServer:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.3.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'   
  SubnetRouteTableAssociationOtherServer:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PrivateSubnetOtherServer
      RouteTableId: !Ref RouteTable   
  EC2OtherServerSG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: EC2OtherServerSG
      GroupDescription: Enable SSH access only from jumpBox via port 22
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          SourceSecurityGroupId: !GetAtt EC2JumpBoxSG.GroupId
  EC2OtherServer:
    Type: 'AWS::EC2::Instance'
    Properties:
      AvailabilityZone: !Ref AZone
      InstanceType: !Ref EC2InstanceType
      SecurityGroups:
        - !Ref EC2OtherServerSG
      Tags:
        - Key: Name
          Value: otherService
      ImageId:
        Fn::FindInMap:
          - AWSRegionArch2AMI
          - !Ref AWS::Region
          - AMZNLINUX2
      KeyName: !Ref KeyName
#endregion - Other Server - F

#endregion - AvailabilityZone 1

#region - AvailabilityZone 2

#region - App Instance
  PrivateSubnetAppInstance:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId' 
  SubnetRouteTableAssociationAppInstance:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PrivateSubnetAppInstance
      RouteTableId: !Ref RouteTable  
  EC2AppInstanceSG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: EC2AppInstanceSG
      GroupDescription: Enable SSH access only from jumpBox via port 22
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          SourceSecurityGroupId: !GetAtt EC2JumpBoxSG.GroupId 
  EC2AppInstance:
    Type: 'AWS::EC2::Instance'
    Properties:
      AvailabilityZone: !Ref AZtwo
      InstanceType: !Ref EC2InstanceType
      SecurityGroups:
        - !Ref EC2AppInstanceSG
      Tags:
        - Key: Name
          Value: appInstance
      ImageId:
        Fn::FindInMap:
          - AWSRegionArch2AMI
          - !Ref AWS::Region
          - AMZNLINUX2
      KeyName: !Ref KeyName
#endregion - App Instance

#region - Database - D
  PrivateSubnetDatabaseServer:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.4.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'   
  SubnetRouteTableAssociationDatabaseServer:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PrivateSubnetDatabaseServer
      RouteTableId: !Ref RouteTable  
  EC2DatabaseServerSG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: EC2DatabaseServerSG
      GroupDescription: Enable SSH access only from jumpBox via port 22
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          SourceSecurityGroupId: !GetAtt EC2JumpBoxSG.GroupId 
  EC2DatabaseServer:
    Type: 'AWS::EC2::Instance'
    Properties:
      AvailabilityZone: !Ref AZtwo
      InstanceType: !Ref EC2InstanceType
      SecurityGroups:
        - !Ref EC2DatabaseServerSG
      Tags:
        - Key: Name
          Value: databaseServer
      ImageId:
        Fn::FindInMap:
          - AWSRegionArch2AMI
          - !Ref AWS::Region
          - UBUNTU
      KeyName: !Ref KeyName
  
#endregion - Other Server - D

#endregion - AvailabilityZone 2
